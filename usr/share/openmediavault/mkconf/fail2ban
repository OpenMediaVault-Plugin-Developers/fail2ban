#!/bin/sh
#
# @license      http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author       OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright    Copyright (c) 2014-2018 OpenMediaVault Plugin Developers
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_FAIL2BAN_PLUGIN_XPATH="//services/fail2ban"

OMV_FAIL2BAN_CONFIG=${OMV_FAIL2BAN_CONFIG:-"/etc/fail2ban/jail.conf"}
OMV_FAIL2BAN_BACKEND=${OMV_FAIL2BAN_BACKEND:-"auto"}
OMV_FAIL2BAN_BANACTION=${OMV_FAIL2BAN_BANACTION:-"iptables-multiport"}
OMV_FAIL2BAN_MTA=${OMV_FAIL2BAN_MTA:-"sendmail"}
OMV_FAIL2BAN_PROTOCOL=${OMV_FAIL2BAN_PROTOCOL:-"tcp"}
OMV_FAIL2BAN_CHAIN=${OMV_FAIL2BAN_CHAIN:-"INPUT"}

defaultJailConf="/etc/fail2ban/jails.d/defaults-debian.conf"

# Generate configuration only if the service is enabled.
if [ "$(omv_config_get "${OMV_FAIL2BAN_PLUGIN_XPATH}/enable")" != "1" ]; then
	exit 0
fi

# remove default Debian jail conf file if it exists
if [ -f "${defaultJailConf}" ]; then
    rm -f ${defaultJailConf}
fi

# Create jail.conf
xmlstarlet sel -t \
    -o "[DEFAULT]" -n \
    -m "${OMV_FAIL2BAN_PLUGIN_XPATH}" \
          -v "concat('ignoreip = ',ignoreip)" -n \
          -v "concat('fintime = ',findtime)" -n \
          -v "concat('banime = ',bantime)" -n \
          -v "concat('maxretry = ',maxretry)" -n \
          -v "concat('destemail = ',destemail)" -n \
    -o "backend = ${OMV_FAIL2BAN_BACKEND}" -n \
    -o "banaction = ${OMV_FAIL2BAN_BANACTION}" -n \
    -o "mta = ${OMV_FAIL2BAN_MTA}" -n \
    -o "protocol = ${OMV_FAIL2BAN_PROTOCOL}" -n \
    -o "chain = ${OMV_FAIL2BAN_CHAIN}" -n \
    -o "action_ = %(banaction)s[name=%(__name__)s, port=\"%(port)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]" -n \
    -o "action_mw = %(banaction)s[name=%(__name__)s, port=\"%(port)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]" -n \
    -o "            %(mta)s-whois[name=%(__name__)s, dest=\"%(destemail)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]" -n \
    -o "action_mwl = %(banaction)s[name=%(__name__)s, port=\"%(port)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]" -n \
    -o "             %(mta)s-whois-lines[name=%(__name__)s, dest=\"%(destemail)s\", logpath=%(logpath)s, chain=\"%(chain)s\"]" -n -n \
    -m "${OMV_FAIL2BAN_PLUGIN_XPATH}" \
          -v "concat('action = %(',action,')s')" -n -n \
    -m "${OMV_FAIL2BAN_PLUGIN_XPATH}/jails/jail" \
          -v "concat('[',name,']')" -n \
          -i "enable = 0" -o "enabled = no" -n -b \
          -i "enable = 1" -o "enabled = yes" -n -b \
          -v "concat('port = ',port)" -n \
          -v "concat('filter = ',filter)" -n \
          -v "concat('logpath = ',logpath)" -n \
          -v "concat('bantime = ',bantime)" -n \
          -v "concat('maxretry = ',maxretry)" -n -n \
  -b \
  ${OMV_CONFIG_FILE} | xmlstarlet unesc > ${OMV_FAIL2BAN_CONFIG}
